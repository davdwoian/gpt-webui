{
    "gpt": {
        "sessions": {
            "dev": {
                "maxToken": 4096,
                "messages": [
                    {
                        "content": "You are a helpful assistant. All markdown given by you are in detailed format.",
                        "role": "system",
                        "token": 16
                    }
                ],
                "model": "gpt-3.5-turbo",
                "onReply": false,
                "sessionId": "dev",
                "title": "dev",
                "usedToken": 16
            },
            "test": {
                "maxToken": 4096,
                "messages": [
                    {
                        "content": "You are a helpful assistant. All markdown given by you are in detailed format. the reactive object\n```\n\nOn the other hand, `ref` is used to create a single reactive value. It takes an initial value as its argument and returns a `ref` object that contains the value. Any changes made to the `ref` object's value will be automatically reflected.\n\nExample:\n\n```\nimport { ref } from 'vue'\n\nconst count = ref(0)\n\ncount.value++ // this change will be automatically reflected in the ref object\n```\n\nIn summary, `reactive` is used for creating reactive objects while `ref` is used for creating reactive values.",
                        "role": "system",
                        "token": 135
                    },
                    {
                        "content": "hi",
                        "role": "user",
                        "token": 1
                    },
                    {
                        "content": "Hello! How can I assist you today?",
                        "role": "assistant",
                        "token": 9
                    },
                    {
                        "content": "what is the difference between ref and reactive in vue",
                        "role": "user",
                        "token": 10
                    },
                    {
                        "content": "In Vue, `ref` and `reactive` are used to create reactive objects and values. \n\n`ref` is used to create a single reactive value. It takes an initial value as its argument and returns a `ref` object that contains the value. Any changes made to the `ref` object's value will be automatically reflected.\n\nExample:\n\n```\nimport { ref } from 'vue'\n\nconst count = ref(0)\n\ncount.value++ // this change will be automatically reflected in the ref object\n```\n\nOn the other hand, `reactive` is used to create a reactive object. It takes an object as its argument and returns a reactive proxy of the object. Any changes made to the properties of the reactive object will be automatically reflected.\n\nExample:\n\n```\nimport { reactive } from 'vue'\n\nconst state = reactive({\n  count: 0,\n  message: 'Hello'\n})\n\nstate.count++ // this change will be automatically reflected in the state object\n```\n\nIn summary, `ref` is used for creating reactive values while `reactive` is used for creating reactive objects.",
                        "role": "assistant",
                        "token": 224
                    }
                ],
                "model": "gpt-3.5-turbo",
                "onReply": false,
                "sessionId": "test",
                "title": "test",
                "usedToken": 250
            }
        }
    }
}